/**
The sequence of triangle numbers is generated by adding the natural numbers.
So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28.
The first ten terms would be:

1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

Let us list the factors of the first seven triangle numbers:

 1: 1
 3: 1,3
 6: 1,2,3,6
10: 1,2,5,10
15: 1,3,5,15
21: 1,3,7,21
28: 1,2,4,7,14,28
We can see that 28 is the first triangle number to have over five divisors.

What is the value of the first triangle number to have over five hundred divisors?
76576500
 */
object problem012 {
  def computeNum(num: Int, sum: Int, limit: (Int) => Boolean): Int = {
    if (limit(sum)) {
      sum
    } else {
      computeNum(num + 1, sum + num, limit)
    }
  }

  def numFactors(num: Int): Boolean = {
    val size = factors(num).size
    println(num  + " " + size)
    size > 500
  }

  def factors(num: Int): List[Int] = {
    val limit = (math.sqrt(num) + 1).toInt
    val factors = List.range(1, limit).toSet
    val f = factors.filter(num % _ == 0)
    val f2 = f.map(num / _)
    (f ++ f2).toList.sorted
  }

  def main (args: Array[String]) {
    print(computeNum(1, 0, numFactors))
  }
}
